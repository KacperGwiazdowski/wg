{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["parseToStringWithSignificantPositions","num","toString","Timer","useState","Date","parse","now","diff","setDiff","useEffect","timer","setTimeout","clearTimeout","days","Math","floor","hours","mins","seconds","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAWA,IAAMA,EAAwC,SAACC,GAC7C,OAAGA,EAAM,GACA,IAAMA,EAAIC,WAEZD,EAAIC,YAIPC,EAAQ,WAAO,IAAD,EACIC,mBAASC,KAAKC,MAAM,cAAgBD,KAAKE,OAD7C,mBACbC,EADa,KACPC,EADO,KAGlBC,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvBH,EAAQJ,KAAKC,MAAM,cAAgBD,KAAKE,SACvC,KAEH,OAAO,kBAAMM,aAAaF,OAG5B,IAAMG,EAAOC,KAAKC,MAAMR,EAAI,OAC5BA,GAAa,MAAJM,EAET,IAAMG,EAAQF,KAAKC,MAAMR,EAAI,MAC7BA,GAAa,KAALS,EAER,IAAMC,EAAOH,KAAKC,MAAMR,EAAI,KAC5BA,GAAY,IAAJU,EAER,IAAMC,EAAUJ,KAAKC,MAAMR,EAAQ,KAInC,OAHAA,GAAmB,IAAXW,EAGD,sBAAKC,UAAU,YAAf,UACL,qBAAKA,UAAU,iBAAf,iBAGA,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sCAGA,qBAAKA,UAAU,mBAAf,SACGpB,EAAsCc,QAG3C,sBAAKM,UAAU,iBAAf,UACE,yCAGA,qBAAKA,UAAU,mBAAf,SACGpB,EAAsCiB,QAG3C,sBAAKG,UAAU,iBAAf,UACE,wCAGA,qBAAKA,UAAU,mBAAf,SACGpB,EAAsCkB,QAG3C,sBAAKE,UAAU,iBAAf,UACE,yCAGA,qBAAKA,UAAU,mBAAf,SACGpB,EAAsCmB,eAQlCE,EAlFf,WACE,OACE,qBAAKD,UAAU,MAAf,SACC,cAAC,EAAD,OCMUE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.afb1c36f.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Timer/>\n    </div>\n  );\n}\n\nconst parseToStringWithSignificantPositions = (num, positions = 2) => {\n  if(num < 10) {\n    return \"0\" + num.toString()\n  }\n  return num.toString();\n}\n\n\nconst Timer = () => {\n  var [diff, setDiff] = useState(Date.parse('08/27/2022') - Date.now())\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDiff(Date.parse('08/27/2022') - Date.now())\n    }, 500);\n\n    return () => clearTimeout(timer)\n  }) \n\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n  diff -=  days * (1000 * 60 * 60 * 24);\n\n  const hours = Math.floor(diff / (1000 * 60 * 60));\n  diff -= hours * (1000 * 60 * 60);\n\n  const mins = Math.floor(diff / (1000 * 60));\n  diff -= mins * (1000 * 60);\n\n  const seconds = Math.floor(diff / (1000));\n  diff -= seconds * (1000);\n\n\n  return <div className=\"container\">\n    <div className=\"flex-row title\">\n      O&K\n    </div>\n    <div className=\"flex-row\">\n      <div className=\"time-container\">\n        <div>\n          Dni\n        </div>\n        <div className=\"number-container\">\n          {parseToStringWithSignificantPositions(days)}\n        </div>\n      </div>\n      <div className=\"time-container\">\n        <div>\n          Godzin\n        </div>\n        <div className=\"number-container\">\n          {parseToStringWithSignificantPositions(hours)}\n        </div>\n      </div>\n      <div className=\"time-container\">\n        <div>\n          Minut\n        </div>\n        <div className=\"number-container\">\n          {parseToStringWithSignificantPositions(mins)}\n        </div>\n      </div>\n      <div className=\"time-container\">\n        <div>\n          Sekund\n        </div>\n        <div className=\"number-container\">\n          {parseToStringWithSignificantPositions(seconds)}\n        </div>\n      </div>\n  </div>\n  </div>\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}